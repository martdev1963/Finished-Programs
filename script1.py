# program that loads, displays and resizes images...
import cv2

# imread() takes has 2 parameters... the image, 0 is no color or gray image, (the color setting: the rgb (1) or grayscale (2) -1 in color with alpha channel for transparency...
img=cv2.imread("galaxy.jpg",-1) # image object...

"""
[[14 18 14 ... 20 15 16]
 [12 16 12 ... 20 15 17]
 [12 13 16 ... 14 24 21]
 ...
 [ 0  0  0 ...  5  8 14]
 [ 0  0  0 ...  2  3  9]
 [ 1  1  1 ...  1  1  3]]
"""
print(img) # results in above output...
# <class 'numpy.ndarray'>
print(type(img))
# shows the number of horizontal and vertical pixels in the array matrix in otherwords it shows the image resolution...
print(img.shape) # results in below output...which is a tuple of the dimension...(1485, 990) (height, width) tuple spits out the height first into index[0] then the width index[1]
# (1485, 990) image resolution in pixels... 1485px high and 990px wide...

print(img.ndim) # shows object is 2 dimensional due to 0 setting for no color...a setting of 1 (thus using rgb) gives you a 3 dimensional array.
# to keep original ratio of the image do this...otherwise it may look distorted...
#                                     index 1 for 990px   index 0 for 1485px
# resize() method takes the arguments in this order: width then height...
resized_image=cv2.resize(img,(int(img.shape[1]/2),int(img.shape[0]/2))) # resize() takes two parameters...the image object and a tuple with the resized dimensions width x height
#resized_image=cv2.resize(img,(500,1000)) # resize() takes two parameters...the image object and a tuple with the resized dimensions width x height

cv2.imshow("Milkyway Galaxy",resized_image) # displays the image in a window....pass a name for the window and the image object...
#cv2.imshow("Galaxy",img) # displays the image in a window....pass a name for the window and the image object...
cv2.imwrite("Galaxy_resized.jpg",resized_image) # creates another image file...
cv2.waitKey(8000) # 0 setting allows user to close the window clicking any button...or you can use milliseconds...
cv2.destroyAllWindows()
